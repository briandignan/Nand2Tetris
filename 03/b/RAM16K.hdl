// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in,sel[0]=address[12],sel[1]=address[13],a=dm0,b=dm1,c=dm2,d=dm3,e=trash1,f=trash2,g=trash3,h=trash4);
    DMux4Way(in=load,sel=address[12..13],a=l0,b=l1,c=l2,d=l3);
    RAM4K(in=dm0,load=l0,address=address[0..11],out=ro0);
    RAM4K(in=dm1,load=l1,address=address[0..11],out=ro1);
    RAM4K(in=dm2,load=l2,address=address[0..11],out=ro2);
    RAM4K(in=dm3,load=l3,address=address[0..11],out=ro3);
    Mux4Way16(a=ro0,b=ro1,c=ro2,d=ro3,sel=address[12..13],out=out);
}