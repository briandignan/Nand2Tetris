// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in,sel=address[6..8],a=dm0,b=dm1,c=dm2,d=dm3,e=dm4,f=dm5,g=dm6,h=dm7);
    DMux8Way(in=load,sel=address[6..8],a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);
    RAM64(in=dm0,load=l0,address=address[0..5],out=ro0);
    RAM64(in=dm1,load=l1,address=address[0..5],out=ro1);
    RAM64(in=dm2,load=l2,address=address[0..5],out=ro2);
    RAM64(in=dm3,load=l3,address=address[0..5],out=ro3);
    RAM64(in=dm4,load=l4,address=address[0..5],out=ro4);
    RAM64(in=dm5,load=l5,address=address[0..5],out=ro5);
    RAM64(in=dm6,load=l6,address=address[0..5],out=ro6);
    RAM64(in=dm7,load=l7,address=address[0..5],out=ro7);
    Mux8Way16(a=ro0,b=ro1,c=ro2,d=ro3,e=ro4,f=ro5,g=ro6,h=ro7,sel=address[6..8],out=out);
}